import pandas as pd
import numpy as np
from glob import glob
from tqdm.notebook import tqdm
import matplotlib.pyplot as plt
from PIL import Image
import os
import keras_ocr

plt.style.use('ggplot') #set the Matplotlib plotting style

# Create a pipeline for Keras OCR
pipeline = keras_ocr.pipeline.Pipeline()

# Define the directory containing image files for batch processing
image_dir = r'C:\Users\rshwa\Desktop\CodingProjects\Text Detection from Images\images to detect text from'

# Define the directory where you want to save the annotated images
output_dir = r'C:\Users\rshwa\Desktop\CodingProjects\Text Detection from Images\images_detected'  # Change this to your desired output directory

# Retrieve a list of image file paths in the directory for multiple formats
image_files = (
    glob(os.path.join(image_dir, '*.jpeg')) +
    glob(os.path.join(image_dir, '*.png')) +
    glob(os.path.join(image_dir, '*.webp')) +
    glob(os.path.join(image_dir, '*.jpg'))
)

results_list = []

# Create the output directory if it doesn't exist
os.makedirs(output_dir, exist_ok=True)

# Process each image in the batch
for image_path in tqdm(image_files):
    # Load the image
    img = plt.imread(image_path)

    # Run the Keras OCR pipeline
    results = pipeline.recognize([image_path])

    # Store the results for this image
    results_list.append(results[0])

    # Create a subplot for displaying the image with annotations
    fig, ax = plt.subplots(figsize=(10, 10))

    # Load the image
    img = plt.imread(image_path)

    # Draw the annotations on the image
    keras_ocr.tools.drawAnnotations(img, results[0], ax=ax)

    ax.set_title('Keras OCR Result Example')

    # Save the annotated image to the output directory
    image_filename = os.path.basename(image_path)
    output_image_path = os.path.join(output_dir, image_filename)
    plt.savefig(output_image_path)
    plt.close()  # Close the plot to release resources
